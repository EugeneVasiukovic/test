JSON
 4. Создать внешний репозиторий c названием JSON.
 переходим на страницу Repository нажимаем New
 ставим галочку на readme.md
 5. Клонировать репозиторий JSON на локальный компьютер.
 Заходим в репозиторий  нажимаем code выбираем вкладка http копируем ссылку
 открываем нужную директорию cd ../../ указываем путь где хотим разметстить ветку
 git clone [вставить ссылку на репозиторий]
 6. Внутри локального JSON создать файл “new.json”.
 touch new.json
 7. Добавить файл под гит.
 git add .
 8. Закоммитить файл.
  git commit -m 'Название комита'
 9. Отправить файл на внешний GitHub репозиторий.
  git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 vim new.json
 11. Отправить изменения на внешний репозиторий.
 git add .
 git commit -m 'название комита'
 git push
 12. Создать файл preferences.json
 touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 vim preferences.json
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 vim skills.json
 15. Отправить сразу 2 файла на внешний репозиторий.
 git add .
 git commit -m 'название комита'
 git push
 16. На веб интерфейсе создать файл bug_report.json.
 add file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 написать название коммита
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 добавить названия .json
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 commit new file
 20. Синхронизировать внешний и локальный репозиторий JSON
 git pull

XML
 21. Создать внешний репозиторий c названием XML.
  переходим на страницу Repository нажимаем New
 ставим галочку на readme.md
 22. Клонировать репозиторий XML на локальный компьютер.
  Заходим в репозиторий  нажимаем code выбираем вкладка http копируем ссылку
 открываем нужную директорию cd ../../ указываем путь где хотим разметстить ветку
 git clone [вставить ссылку на репозиторий]
 23. Внутри локального XML создать файл “new.xml”.
  touch new.xml
 24. Добавить файл под гит.
 git add .
 25. Закоммитить файл.
 git commit -m 'Название комита'
 26. Отправить файл на внешний GitHub репозиторий.
 git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 vim new.xml 
 28. Отправить изменения на внешний репозиторий.
  git add .
 git commit -m 'название комита'
 git push
 29. Создать файл preferences.xml
  touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
  vim preferences.xml
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
  vim skills.xml
 32. Сделать коммит в одну строку.
git add .; git commit -m "XML_task" 
git commit -am 'название коммита'
 33. Отправить сразу 2 файла на внешний репозиторий.
  git push
 34. На веб интерфейсе создать файл bug_report.xml.
  add file
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
  написать название коммита
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 добавить названия .xml
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
  commit new file
 38. Синхронизировать внешний и локальный репозиторий XML
 git pull
